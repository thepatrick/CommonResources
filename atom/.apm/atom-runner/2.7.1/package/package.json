{"name":"atom-runner","main":"./lib/atom-runner","version":"2.7.1","description":"Runs scripts inside of Atom.","repository":{"type":"git","url":"git+https://github.com/lsegal/atom-runner.git"},"dependencies":{"ansi-to-html":"0.1.x","atom-space-pen-views":"^2.0.3"},"activationCommands":{"atom-text-editor":["run:file","run:selection","run:stop","run:close","run:copy"]},"license":"MIT","readme":"# Atom Runner\n\nThis package will run various script files inside of Atom.\nIt currently supports JavaScript, CoffeeScript, Ruby, Python, Go, Bash and PowerShell\nscripts. You can add more!\n\n![Example](https://raw.githubusercontent.com/lsegal/atom-runner/master/resources/screenshot-1.png)\n\n## Using\n\n* Hit Ctrl+R (Alt+R on Win/Linux) to launch the runner for the active window.\n* Hit Ctrl+Shift+R (Alt+Shift+R on Win/Linux) to run the currently selected\n  text in the active window.\n* Hit Ctrl+Shift+C to kill a currently running process.\n* Hit Escape to close the runner window.\n\n## Features\n\n* A docked runner window with ANSI support and ESC keybinding to close.\n* PATH and environment variable detection on OSX.\n* Shebang executable detection in all source files.\n* Configurable commands based on file scope or filename matches.\n* Execute unsaved file buffers!\n\n## Configuring\n\nYou can add more commands for a given language scope, or add commands by\nextension instead (if multiple extensions use the same syntax). Extensions\nare searched before scopes (syntaxes).\n\nTo do so, add the `'runner'` configuration object to `~/.atom/config.cson`\n(or go to **File -> Config...**) in the format provided below, which also represents the\ndefault configuration for this plugin:\n\n```cson\n# Make sure to place 'runner' under '*' object.\n'*':\n  ...\n  'runner':\n    'scopes':\n      'coffee': 'coffee'\n      'js': 'node'\n      'ruby': 'ruby'\n      'python': 'python'\n      'go': 'go run'\n      'shell': 'bash'\n      'powershell': 'powershell -noninteractive -noprofile -c -'\n    'extensions':\n      'spec.coffee': 'mocha'\n      'ps1': 'powershell â€“file'\n```\n\n**IMPORTANT NOTE**: Spaces are significant in the configuring of `.cson`\nfiles. You *must* follow the exact indentation provided in the example\nabove using spaces (no tabs).\n\nIf a [shebang][sh] is detected in the source code, that line will supersede the\ndefault registered command.\n\nThe mapping is `SCOPE|EXT => EXECUTABLE`, so to run JavaScript files through\nphantom, you would do:\n\n```cson\n# Make sure to place 'runner' under '*' object.\n'*':\n  ...\n  'runner':\n    'scopes':\n      'js': 'phantom'\n```\n\nNote that the `source.` prefix is ignored for syntax scope listings.\n\nSimilarly, in the extension map:\n\n```cson\n# Make sure to place 'runner' under '*' object.\n'*':\n  ...\n  'runner':\n    'extensions':\n      'js': 'phantom'\n```\n\nNote that the `.` extension prefix is ignored for extension listings.\n\n## FAQ And Known Issues\n\n### 1. I keep getting `spawn node ENOENT` or `Unable to find command` errors. Why?\n\nAtom-runner relies on your `PATH` environment variable to run executables through your shell.\nIn order to correctly run executables, they must be in your `PATH`. In Mac OS X systems,\nrunning Atom.app from the Launchpad or Dock will not source your `PATH` directory additions\nfrom your `~/.bashrc` or other shell profile files, and you are likely not loading your\nfull set of paths into your environment. In Windows systems, you configure your `PATH`\nenvironment through the [Advanced System Settings panel][winconfig].\n\nIn order to ensure that your `PATH` is correctly configured in OS X, it is recommended to\nload Atom only through an active terminal (i.e., the `atom` command).\n\n### 2. I am hitting Alt+R (or Cmd+R) and nothing is happening.\n\nIt is possible that the language you are writing code in is not recognized by this plugin\nin its default configuration. See the configuring section above to add support for your\nlanguage or file extension if it is not there.\n\n### 3. This plugin is broken! Should I file a bug report?!\n\nBefore you open a bug report, please make sure that you have properly configured the\nplugin for your environment. There are a lot of external factors that can cause the\nplugin to fail that are dependent on the language you are using, the code you are\nwriting, the OS you are on, and much more. Please be mindful that this plugin is\ndeveloped for many different languages and third-party tools, and the details of\na single environment may not be immediately obvious.\n\nOpening a bug report that says the plugin is \"not working\" is not helpful and will\nlikely end up being closed due to lack of reproduceability. Unfortunately it is not\npossible to provide detailed configuration instructions for each language and/or\nenvironment combination in the bug tracker.\n\nIf you believe you have found a legitimate bug and can provide reliable reproduction\nsteps to show the issue, please file a bug report. Please make sure that you provide\ndetailed steps and include your environment (OS), language, and, if relevant, any\nsource code you executed when running into the issue. Without this information,\nit is not always possible to know what is broken, and this will slow down the\nability to provide a quick patch for any bugs.\n\nThanks for cooperating!\n\n## License & Copyright\n\nThis package is Copyright (c) Loren Segal 2014 and is licensed under the MIT\nlicense.\n\n[sh]: https://en.wikipedia.org/wiki/Shebang_(Unix)\n[winconfig]: http://www.computerhope.com/issues/ch000549.htm\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/lsegal/atom-runner/issues"},"homepage":"https://github.com/lsegal/atom-runner#readme","_id":"atom-runner@2.7.1","_shasum":"2244af9100d21998e1f72bbc465da40d76649e56","_resolved":"file:../d-117012-14293-1o2mzwu/package.tgz","_from":"../d-117012-14293-1o2mzwu/package.tgz"}