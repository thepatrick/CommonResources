{"name":"git-plus","main":"./lib/git-plus","version":"7.0.7","description":"Do git things without the terminal","keywords":["git"],"providedServices":{"git-plus":{"description":"Execute git commands","versions":{"1.0.0":"provideService"}}},"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}},"autosave":{"versions":{"1.0.0":"consumeAutosave"}}},"repository":{"type":"git","url":"git+https://github.com/akonwi/git-plus.git"},"license":"MIT","engines":{"atom":">0.50.0"},"dependencies":{"ansi-to-html":"^0.4.1","atom-notify":"^1.1.0","atom-space-pen-views":"^2.0.3","fs-plus":"^2.2.0","fuzzaldrin":"^1.2.0","underscore":"^1.8.3","underscore-plus":"^1.6.6","universal-analytics":"^0.4.8","uuid":"^3.0.1"},"devDependencies":{"quibble":"^0.3.0"},"readme":"# Git-Plus package ![Build Status](https://travis-ci.org/akonwi/git-plus.svg?branch=master)\n\n[![forthebadge](http://forthebadge.com/images/badges/uses-git.svg)](http://forthebadge.com)\n\nvim-fugitive like package for atom. make commits and other git things without the terminal\n\n![A screenshot of your spankin' package](https://raw.githubusercontent.com/akonwi/git-plus/master/commit.gif)\n\n## Usage\n\n# IMPORTANT:\nMake sure your gitconfig file is configured. You must configure at least the `user.email` and `user.name` variables.\n\nAlso, the package currently favors an ssh setup that doesn't expect to be prompted for credentials in order to push/pull, .etc. Github has a guide to help you set that up [here](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)\n\nIf you are on a Windows machine, I recommend checking out [this thread](https://github.com/akonwi/git-plus/issues/224) if you have issues pushing/pulling from a remote repository with this package. I also don't have the means to do my own user testing in a windows environment so I won't be immediately able to help troubleshoot windows problems.\n\n### Showing the Git-Plus Palette\n>- `Cmd-Shift-H` on MacOS\n>- `Ctrl-Shift-H` on Windows + Linux\n>- `Git Plus: Menu` on the atom command palette.\n\n### Push/Pull/Fetch notifications\nNotifications will appear in a console output above the status bar.\nThis view can be toggled by clicking the pin icon in the bottom right of the status bar.\n\n![screenshot](https://github.com/akonwi/git-plus/raw/master/pin.png)\n\n### Commands\n_Commands are accessible for keybindings by dasherizing the command title._\n> Git Add ==  `git-plus:add`\n\n> Git Add All Commit And Push == `git-plus:add-all-commit-and-push`\n\n  __Note: The following list of commands is not exhaustive. If what you want isn't a feature, you can use `Git Run` and enter the command.__\n\n| Command | Effect | Default key binding |\n|----------|--------|------------------\n| `Git Run ` | Execute a custom command. ex. `fetch --all` | |\n| `Git Status ` | Show current status. | `Cmd-Shift-A S` |\n| `Git Add ` | Add the current file to the index. | `Cmd-Shift-A` |\n| `Git Add All` | Adds all files to the index (ex. `git add .`). | |\n| `Git Commit` | Commit the staged changes. Git-Plus will show an editor for the commit message. To make the commit, save the file. To cancel the commit, close the tab. | `Cmd-Shift-C`(*`Ctrl-Shift-X`* on Windows and Linux) |\n| `Git Add And Commit` | Stages the current file before preparing a commit. (`Git add all` and `Git commit` run in succession) | `Cmd-Shift-A c` |\n| `Git Add All and Commit` | Stages all changes before preparing a commit. (`Git add all` and `Git commit` in succession) | `Cmd-Shift-A a` |\n| `Git Add And Commit And Push` |  Commit currently open file and push to a remote repo. | `Cmd-Shift-A Q` |\n| `Git Add All Commit And Push` | Commit all changes and push to a remote repo. | `Cmd-Shift-A P` |\n| `Git Commit Amend` | Amend the previous commit. |  |\n| `Git Checkout Current File` | Undo changes and reset the current file to HEAD. | |\n| `Git Checkout `*`[ref]`* | Change to another ref (branch or tag). | |\n| `Git Checkout New branch` | Create a new branch. | |\n| `Git Diff [All]` | Show the diff for the current file, or all files. The diff can either be against the staged or un-staged tree, as selected in the options. | |\n| `Git` *`[PushâŽ®Pull]`* | Push to or pull from a remote repo. If you have multiple remote repos, you can choose which to push to or pull from. | |\n| `Git Remove [current file]` | `git rm` the current file or open an selector to select the files to remove. You can select multiple files at once. | |\n| `Git Log [Current File]` | Show the commit history [for the current file] and show display the selected commit. | |\n| `Git Show` | Show the specified object, for example `HEAD`, `HEAD~2`,`3925a0d`, `origin/master` or `v2.7.3`. | |\n| `Git Open Changed Files` | Open tabs with all added, modified or renamed files. | |\n| `Git Tags` | Operate on tags individually. There are options to add, show, push, checkout, verify, and delete. | |\n\n### Commit Window\nTo change where the commit window appears go to settings and find\n![screenshot](http://imgur.com/cdc7M5p.png)\n\n### Experimental Features\nIf you would like to use experimental features, enable them in the package settings.\n* Custom Commands\n  > If enabled, you can define your own commands in your atom `init.coffee` or `init.js` file. These commands will appear in both the atom command palette as well as the Git-Plus command palette. Just like any other commands, you can define keybindings for them as well.\n\n  > Example command for undoing the last commit:\n  ``` coffeescript\n  # In init.coffee\n  atom.packages.onDidActivateInitialPackages (p) ->\n  if gitPlus = atom.packages.getActivePackage('git-plus')?.mainModule.provideService()\n    gitPlus.registerCommand 'atom-text-editor', 'custom-git-commands:undo-last-commit', ->\n      gitPlus.getRepo() # If there are multiple repos in the project, you will be prompted to select which to use\n      .then (repo) -> gitPlus.run repo, 'reset HEAD~1'\n  ```\n  > The name of the command in the Git-plus palette will be the undasherized version of what you provided -> 'Undo Last Commit'.\n\n  > *Please beware of giving your commands the same name(undo-last-commit) as existing commands. They will appear as duplicates in the Git-plus palette.*\n* Stage Files Beta\n  > When enabled, the 'Unstage Files' and 'Stage Files' commands will be merged into one view where the staged status of multiple files can be toggled.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Write tests\n4. Make your changes\n5. Run `apm test`\n6. Commit your changes (`git commit -am 'Add some feature'`)\n7. Push to the branch (`git push origin my-new-feature`)\n8. Create new Pull Request\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/akonwi/git-plus/issues"},"homepage":"https://github.com/akonwi/git-plus#readme","_id":"git-plus@7.0.7","_shasum":"797702cc06f5df4dedcc1c4cc4915f4ed1cc5d63","_resolved":"file:../d-117012-14329-1pznt04/package.tgz","_from":"../d-117012-14329-1pznt04/package.tgz"}